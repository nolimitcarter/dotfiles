#   _               _
#  | |__   __ _ ___| |__  _ __ ___     nolimitcarter 
#  | '_ \ / _` / __| '_ \| '__/ __|    https://github.com/nolimitcarter
#  | |_) | (_| \__ \ | | | | | (__     https://cartert.dev
#  |_.__/ \__,_|___/_| |_|_|  \___|
#

[ -z "$OS" ] && OS='uname'
case "$OS" in
  *indows* )        PLATFORM=windows ;;
  Linux )           PLATFORM=linux ;;
  FreeBSD|Darwin )  PLATFORM=mac ;;
esac
export PLATFORM OS

## sets path variables
export PATH=\
$HOME/bin:\
$HOME/go/bin:\
$HOME/.cargo/bin:\
/usr/local/go/bin:\
/usr/local/bin:\
/usr/local/sbin:\
/usr/sbin:\
/usr/bin:\
/snap/bin:\
/sbin:\
/bin:\

# be sure not to remove ./ or stuff gets weird
export CDPATH=\
./:\
$REPOS/gitlab.com/$GITUSER:\
$REPOS/github.com/$GITUSER:\
$REPOS/gitlab.com/*:\
$REPOS/github.com/*:\
$REPOS/gitlab.com:\
$REPOS/github.com:\
$REPOS:\
/media/$USER:\
$HOME


# editor 
export EDITOR=vim
export EDItoR="$VISUAL"

set -o vi 
set bell-style none

# aliases 
if [ -f $HOME/.bash_aliases ];
then
	. $HOME/.bash_aliases
fi

# user prompt 
if [[ ${EUID} == 0 ]] ; then
	  PS1='\[\033[01;31m\][\h\[\033[01;36m\] \W\[\033[01;31m\]]\$\[\033[00m\] '
  else
	  PS1='\n\033[1;33m\]♛ \[\033[1;35m\]\[boostmod3\[\033[1;33m\] \n\033[36m\]\W\[\033[0;36m\] ⟹   \[\033[0m\]'
fi

# dircolors
# if [ -x /usr/bin/dircolors ]; then 
#	if [ -r ~/.dircolors ]; then
#		eval "$(dircolors -b ~/.dircolors)"
#	else
#		eval "$(dircolors -b)" 
#	fi
#fi

if [ "$TERM" != "dumb" ]; then
	eval "`dircolors -b`"
	alias ls='ls --color=auto'
	alias dir='ls --color=auto --format=vertical'
	alias vdir='ls --color=auto --format=long'
fi

# grep autocomplete/helper made with go 
source ~/repos/github.com/nolimitcarter/cloned/gf/gf-completion.bash

# bash tab completion because why not??
bind "set completion-ignore-case on"
bind "set show-all-if-ambiguous on"


############################
######## functions #########
############################

# netinfo - shows system network info
netinfo ()
{
	echo "--------------- Network Information ---------------"
	/sbin/ifconfig | awk /'inet addr/ {print $2}'
	/sbin/ifconfig | awk /'Bcast/ {print $3}'
	/sbin/ifconfig | awk /'inet addr/ {print $4}'
	/sbin/ifconfig | awk /'HWaddr/ {print $4,$5}'
	myip=`lynx -dump -hiddenlinks=ignore -nolist http://checkip.dyndns.org:8245/ | sed '/^$/d; s/^[ ]*//g; s/[ ]*$//g' `
	echo "${myip}"
	echo "---------------------------------------------------"
}

# simple clock function 
myclock () 
{ 
	while true;do clear;echo "===========";date +"%r";echo "===========";sleep 1;done 
}


# define a word using define dog and lynx
define () 
{ 
	lynx- dump "http://www.google.com/search?hl=en&q=define%3A+${1}&btnG=Google+Search" | grep -m 3 -w "*"  | sed 's/;/ -/g' | cut -d- -f1 > /tmp/templookup.txt
	if [[ -s /tmp/templookup.txt ]] ;then
		until ! read response
			do 
			echo "${response}"
			done < /tmp/templooup.txt
		else 
			echo "Sorry $USER, I can't find the term \"${1} \""
	fi 
\rm -f /tmp/templookup.txt
}


# lowercase all files in the current directory 
lcfiles () 
{ 
        print -n 'Really lowercase all files? (y/n) '
        if read -q ; then 
                for i in * ; do 
                        mv $i $i:l
        done 
        fi
}

# copy and go to dir
cpg () 
{ 
        if [ -d "$2" ];then 
                cp $1 $2 && cd $2
        else
                cp $1 $2 
        fi 
} 

# move and go to dir
mvg ()
{ 
        if [ -d "$2" ];then 
                mv $1 $2 && cd $2
        else 
                mv $1 $2
        fi
} 

# show tilde
tilde () 
{ 
        echo "~"
}

# translate a word
translate () 
{ 
TRANSLATED=`lynx -dump "http://dictionary.reference.com/browse/${1}" | grep -i -m 1 -w "${2}:" | sed 's/^[ \t]*//;s/[ \t]*$//'`
if [[ ${#TRANSLATED} != 0 ]] ;then
        echo "\"${1}\" in ${TRANSLATED}"
        else 
                echo "Sorry, no translation. \"${1}\" to ${2}"
fi
} 

# extracter 
extract () 
{ 
if [ -f $1 ] ;then 
  case $1 in 
    *.tar.bz2)   tar xjf $1        ;;
    *.tar.gz)    tar xzf $1     ;;
    *.bz2)       bunzip2 $1       ;;
    *.rar)       rar x $1     ;;
    *.gz)        gunzip $1     ;;
    *.tar)       tar xf $1        ;;
    *.tbz2)      tar xjf $1      ;;
    *.tgz)       tar xzf $1       ;;
    *.zip)       unzip $1     ;;
    *.Z)         uncompress $1  ;;
    *.7z)        7z x $1    ;;
    *)           echo "'$1' cannot be extracted via extract()" ;;
  esac
    else
      echo "'$1' is not a valid file"
 fi
}



# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/carter/anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/carter/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/carter/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/carter/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

